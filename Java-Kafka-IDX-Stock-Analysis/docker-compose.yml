version: "3.5"
services:

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8282:8282"
      - "1088:1088"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:19092,kafka2:19093,kafka3:19094
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8282
      SCHEMA_REGISTRY_JMX_OPTS:
        -Djava.rmi.server.hostname=localhost
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port=1088
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.rmi.port=1088
    restart: always

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.29.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - schema-registry
    ports:
      - "9088:9088"
      - "1099:1099"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:9088
      KSQL_BOOTSTRAP_SERVERS: kafka1:19092,kafka2:19093,kafka3:19094
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8282
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_QUERY_PULL_METRICS_ENABLED: "true"
      KSQL_JMX_OPTS:
        -Djava.rmi.server.hostname=localhost
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.port=1099
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.rmi.port=1099
    restart: always

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.29.0
    container_name: ksqldb-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    restart: always

#  kafka-gen:
#    image: confluentinc/cp-kafka:7.3.3
#    hostname: kafka-gen
#    container_name: kafka-gen
#    volumes:
#      - ./scripts/create_cluster_id.sh:/tmp/create_cluster_id.sh
#      - ./clusterID:/tmp/clusterID
#    command: "bash -c '/tmp/create_cluster_id.sh'"

  kafka1:
    image: confluentinc/cp-kafka:7.3.3
    container_name: kafka1
    ports:
      - "39092:39092"
      - "49092:49092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_JMX_PORT: 49092
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka1:19092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LISTENERS: BROKER://kafka1:19092,EXTERNAL://kafka1:39092,CONTROLLER://kafka1:9093
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: 'controller,broker'
      TOPIC_AUTO_CREATE: 'false'
      # 2 Days of Retention
      KAFKA_LOG_RETENTION_HOURS: 48
      # For testing small segments 16MB and retention of 128MB
      KAFKA_LOG_SEGMENT_BYTES: 16777216
      KAFKA_LOG_RETENTION_BYTES: 134217728
    volumes:
      - kafka1-data:/var/lib/kafka/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"
    restart: always

  kafka2:
    image: confluentinc/cp-kafka:7.3.3
    container_name: kafka2
    ports:
      - "39093:39093"
      - "49093:49093"
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_JMX_PORT: 49093
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka2:19093,EXTERNAL://localhost:39093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LISTENERS: BROKER://kafka2:19093,EXTERNAL://kafka2:39093,CONTROLLER://kafka2:9093
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: 'controller,broker'
      TOPIC_AUTO_CREATE: 'false'
      # 2 Days of Retention
      KAFKA_LOG_RETENTION_HOURS: 48
      # For testing small segments 16MB and retention of 128MB
      KAFKA_LOG_SEGMENT_BYTES: 16777216
      KAFKA_LOG_RETENTION_BYTES: 134217728
    volumes:
      - kafka2-data:/var/lib/kafka/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"
    restart: always

  kafka3:
    image: confluentinc/cp-kafka:7.3.3
    container_name: kafka3
    ports:
      - "39094:39094"
      - "49094:49094"
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_JMX_PORT: 49094
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka3:19094,EXTERNAL://localhost:39094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka1:9093,2@kafka2:9093,3@kafka3:9093'
      KAFKA_LISTENERS: BROKER://kafka3:19094,EXTERNAL://kafka3:39094,CONTROLLER://kafka3:9093
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_PROCESS_ROLES: 'controller,broker'
      TOPIC_AUTO_CREATE: 'false'
      # 2 Days of Retention
      KAFKA_LOG_RETENTION_HOURS: 48
      # For testing small segments 16MB and retention of 128MB
      KAFKA_LOG_SEGMENT_BYTES: 16777216
      KAFKA_LOG_RETENTION_BYTES: 134217728
    volumes:
      - kafka3-data:/var/lib/kafka/data
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./clusterID:/tmp/clusterID
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"
    restart: always

  jmx-kafka1:
    image: sscaling/jmx-prometheus-exporter:latest
    container_name: jmx-kafka1
    ports:
      - "5556:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: "-Xmx128M"
    volumes:
      - ./etc/jmx_exporter/config_kafka1.yml:/etc/jmx_exporter/config.yml
    depends_on:
      - kafka1

  jmx-kafka2:
    image: sscaling/jmx-prometheus-exporter:latest
    container_name: jmx-kafka2
    ports:
      - "5557:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: "-Xmx128M"
    volumes:
      - ./etc/jmx_exporter/config_kafka2.yml:/etc/jmx_exporter/config.yml
    depends_on:
      - kafka2

  jmx-kafka3:
    image: sscaling/jmx-prometheus-exporter:latest
    container_name: jmx-kafka3
    ports:
      - "5558:5556"
    environment:
      CONFIG_YML : "/etc/jmx_exporter/config.yml"
      JVM_OPTS: "-Xmx128M"
    volumes:
      - ./etc/jmx_exporter/config_kafka3.yml:/etc/jmx_exporter/config.yml
    depends_on:
      - kafka3

  prometheus-kafka:
    image: prom/prometheus:v2.46.0
    container_name: prometheus-kafka
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command: "--config.file=/etc/prometheus/prometheus.yml"

  grafana-kafka:
    image: grafana/grafana:8.4.5
    container_name: grafana-kafka
    ports:
      - "3000:3000"
    environment:
      GF_PATHS_DATA : /var/lib/grafana
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD : kafka
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
#      - ./grafana/provisioning:/etc/grafana/provisioning
#      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus-kafka

volumes:
  kafka1-data:
  kafka2-data:
  kafka3-data:

networks:
  default:
    name: my_docker_network
    external: true